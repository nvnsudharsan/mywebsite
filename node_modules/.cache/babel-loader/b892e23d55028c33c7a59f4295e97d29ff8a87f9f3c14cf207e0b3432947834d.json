{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import{BarChart,Bar,XAxis,YAxis,Tooltip,ResponsiveContainer,CartesianGrid}from'recharts';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function GitHubContributionsChart(){const[data,setData]=useState([]);useEffect(()=>{const fetchContributions=async()=>{const token=process.env.REACT_APP_GITHUB_TOKEN;const query=`\n        {\n          user(login: \"nvnsudharsan\") {\n            contributionsCollection {\n              contributionCalendar {\n                weeks {\n                  contributionDays {\n                    date\n                    contributionCount\n                  }\n                }\n              }\n            }\n          }\n        }\n      `;try{const response=await axios.post('https://api.github.com/graphql',{query},{headers:{Authorization:`Bearer ${token}`}});const days=response.data.data.user.contributionsCollection.contributionCalendar.weeks.flatMap(week=>week.contributionDays);const monthlyTotals=days.reduce((acc,day)=>{const month=new Date(day.date).toLocaleString('default',{month:'short'});acc[month]=(acc[month]||0)+day.contributionCount;return acc;},{});const chartData=Object.entries(monthlyTotals).map(_ref=>{let[month,contributions]=_ref;return{month,contributions};});setData(chartData);}catch(error){console.error('Failed to fetch GitHub contributions:',error);}};fetchContributions();},[]);return/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',height:300,backgroundColor:'transparent'},children:/*#__PURE__*/_jsx(ResponsiveContainer,{children:/*#__PURE__*/_jsxs(BarChart,{data:data,style:{backgroundColor:'#1a1a2e',borderRadius:'8px',padding:'1rem'},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\",stroke:\"#2c2c3d\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"month\",stroke:\"#dce8f2\"}),/*#__PURE__*/_jsx(YAxis,{stroke:\"#dce8f2\"}),/*#__PURE__*/_jsx(Tooltip,{contentStyle:{backgroundColor:'#1a1a2e',border:'none',color:'#dce8f2'},labelStyle:{color:'#5bc0ff'},itemStyle:{color:'#dce8f2'}}),/*#__PURE__*/_jsx(Bar,{dataKey:\"contributions\",fill:\"#5bc0ff\"})]})})});}export default GitHubContributionsChart;","map":{"version":3,"names":["React","useEffect","useState","axios","BarChart","Bar","XAxis","YAxis","Tooltip","ResponsiveContainer","CartesianGrid","jsx","_jsx","jsxs","_jsxs","GitHubContributionsChart","data","setData","fetchContributions","token","process","env","REACT_APP_GITHUB_TOKEN","query","response","post","headers","Authorization","days","user","contributionsCollection","contributionCalendar","weeks","flatMap","week","contributionDays","monthlyTotals","reduce","acc","day","month","Date","date","toLocaleString","contributionCount","chartData","Object","entries","map","_ref","contributions","error","console","style","width","height","backgroundColor","children","borderRadius","padding","strokeDasharray","stroke","dataKey","contentStyle","border","color","labelStyle","itemStyle","fill"],"sources":["/Users/geo-ns36752/Documents/GitHub/mywebsite/src/components/GitHubContributionsChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  CartesianGrid\n} from 'recharts';\n\nfunction GitHubContributionsChart() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchContributions = async () => {\n      const token = process.env.REACT_APP_GITHUB_TOKEN;\n      const query = `\n        {\n          user(login: \"nvnsudharsan\") {\n            contributionsCollection {\n              contributionCalendar {\n                weeks {\n                  contributionDays {\n                    date\n                    contributionCount\n                  }\n                }\n              }\n            }\n          }\n        }\n      `;\n\n      try {\n        const response = await axios.post(\n          'https://api.github.com/graphql',\n          { query },\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        const days = response.data.data.user.contributionsCollection.contributionCalendar.weeks\n          .flatMap((week) => week.contributionDays);\n\n        const monthlyTotals = days.reduce((acc, day) => {\n          const month = new Date(day.date).toLocaleString('default', { month: 'short' });\n          acc[month] = (acc[month] || 0) + day.contributionCount;\n          return acc;\n        }, {});\n\n        const chartData = Object.entries(monthlyTotals).map(([month, contributions]) => ({\n          month,\n          contributions,\n        }));\n\n        setData(chartData);\n      } catch (error) {\n        console.error('Failed to fetch GitHub contributions:', error);\n      }\n    };\n\n    fetchContributions();\n  }, []);\n\n  return (\n    <div style={{ width: '100%', height: 300, backgroundColor: 'transparent' }}>\n      <ResponsiveContainer>\n        <BarChart\n          data={data}\n          style={{ backgroundColor: '#1a1a2e', borderRadius: '8px', padding: '1rem' }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#2c2c3d\" />\n          <XAxis dataKey=\"month\" stroke=\"#dce8f2\" />\n          <YAxis stroke=\"#dce8f2\" />\n          <Tooltip\n            contentStyle={{ backgroundColor: '#1a1a2e', border: 'none', color: '#dce8f2' }}\n            labelStyle={{ color: '#5bc0ff' }}\n            itemStyle={{ color: '#dce8f2' }}\n          />\n          <Bar dataKey=\"contributions\" fill=\"#5bc0ff\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nexport default GitHubContributionsChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}